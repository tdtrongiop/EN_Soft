//
// File generated by /usr/local/root/bin/rootcint at Thu Nov 27 17:29:06 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__Art
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__Art.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TArtAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtAnalysis(void *p = 0);
   static void *newArray_TArtAnalysis(Long_t size, void *p);
   static void delete_TArtAnalysis(void *p);
   static void deleteArray_TArtAnalysis(void *p);
   static void destruct_TArtAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtAnalysis*)
   {
      ::TArtAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtAnalysis", ::TArtAnalysis::Class_Version(), "././TArtAnalysis.h", 21,
                  typeid(::TArtAnalysis), DefineBehavior(ptr, ptr),
                  &::TArtAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::TArtAnalysis) );
      instance.SetNew(&new_TArtAnalysis);
      instance.SetNewArray(&newArray_TArtAnalysis);
      instance.SetDelete(&delete_TArtAnalysis);
      instance.SetDeleteArray(&deleteArray_TArtAnalysis);
      instance.SetDestructor(&destruct_TArtAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtAnalysis*)
   {
      return GenerateInitInstanceLocal((::TArtAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtUnpackEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtUnpackEvent(void *p = 0);
   static void *newArray_TArtUnpackEvent(Long_t size, void *p);
   static void delete_TArtUnpackEvent(void *p);
   static void deleteArray_TArtUnpackEvent(void *p);
   static void destruct_TArtUnpackEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtUnpackEvent*)
   {
      ::TArtUnpackEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtUnpackEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtUnpackEvent", ::TArtUnpackEvent::Class_Version(), "././TArtUnpackEvent.h", 21,
                  typeid(::TArtUnpackEvent), DefineBehavior(ptr, ptr),
                  &::TArtUnpackEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TArtUnpackEvent) );
      instance.SetNew(&new_TArtUnpackEvent);
      instance.SetNewArray(&newArray_TArtUnpackEvent);
      instance.SetDelete(&delete_TArtUnpackEvent);
      instance.SetDeleteArray(&deleteArray_TArtUnpackEvent);
      instance.SetDestructor(&destruct_TArtUnpackEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtUnpackEvent*)
   {
      return GenerateInitInstanceLocal((::TArtUnpackEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtUnpackEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtSortEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtSortEvent(void *p = 0);
   static void *newArray_TArtSortEvent(Long_t size, void *p);
   static void delete_TArtSortEvent(void *p);
   static void deleteArray_TArtSortEvent(void *p);
   static void destruct_TArtSortEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSortEvent*)
   {
      ::TArtSortEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtSortEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSortEvent", ::TArtSortEvent::Class_Version(), "././TArtSortEvent.h", 20,
                  typeid(::TArtSortEvent), DefineBehavior(ptr, ptr),
                  &::TArtSortEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TArtSortEvent) );
      instance.SetNew(&new_TArtSortEvent);
      instance.SetNewArray(&newArray_TArtSortEvent);
      instance.SetDelete(&delete_TArtSortEvent);
      instance.SetDeleteArray(&deleteArray_TArtSortEvent);
      instance.SetDestructor(&destruct_TArtSortEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtSortEvent*)
   {
      return GenerateInitInstanceLocal((::TArtSortEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSortEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtAnlEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtAnlEvent(void *p = 0);
   static void *newArray_TArtAnlEvent(Long_t size, void *p);
   static void delete_TArtAnlEvent(void *p);
   static void deleteArray_TArtAnlEvent(void *p);
   static void destruct_TArtAnlEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtAnlEvent*)
   {
      ::TArtAnlEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtAnlEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtAnlEvent", ::TArtAnlEvent::Class_Version(), "././TArtAnlEvent.h", 20,
                  typeid(::TArtAnlEvent), DefineBehavior(ptr, ptr),
                  &::TArtAnlEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TArtAnlEvent) );
      instance.SetNew(&new_TArtAnlEvent);
      instance.SetNewArray(&newArray_TArtAnlEvent);
      instance.SetDelete(&delete_TArtAnlEvent);
      instance.SetDeleteArray(&deleteArray_TArtAnlEvent);
      instance.SetDestructor(&destruct_TArtAnlEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtAnlEvent*)
   {
      return GenerateInitInstanceLocal((::TArtAnlEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtAnlEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtF2Param_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtF2Param(void *p = 0);
   static void *newArray_TArtF2Param(Long_t size, void *p);
   static void delete_TArtF2Param(void *p);
   static void deleteArray_TArtF2Param(void *p);
   static void destruct_TArtF2Param(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtF2Param*)
   {
      ::TArtF2Param *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtF2Param >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtF2Param", ::TArtF2Param::Class_Version(), "././TArtF2Param.h", 9,
                  typeid(::TArtF2Param), DefineBehavior(ptr, ptr),
                  &::TArtF2Param::Dictionary, isa_proxy, 4,
                  sizeof(::TArtF2Param) );
      instance.SetNew(&new_TArtF2Param);
      instance.SetNewArray(&newArray_TArtF2Param);
      instance.SetDelete(&delete_TArtF2Param);
      instance.SetDeleteArray(&deleteArray_TArtF2Param);
      instance.SetDestructor(&destruct_TArtF2Param);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtF2Param*)
   {
      return GenerateInitInstanceLocal((::TArtF2Param*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtF2Param*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtF3Param_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtF3Param(void *p = 0);
   static void *newArray_TArtF3Param(Long_t size, void *p);
   static void delete_TArtF3Param(void *p);
   static void deleteArray_TArtF3Param(void *p);
   static void destruct_TArtF3Param(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtF3Param*)
   {
      ::TArtF3Param *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtF3Param >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtF3Param", ::TArtF3Param::Class_Version(), "././TArtF3Param.h", 8,
                  typeid(::TArtF3Param), DefineBehavior(ptr, ptr),
                  &::TArtF3Param::Dictionary, isa_proxy, 4,
                  sizeof(::TArtF3Param) );
      instance.SetNew(&new_TArtF3Param);
      instance.SetNewArray(&newArray_TArtF3Param);
      instance.SetDelete(&delete_TArtF3Param);
      instance.SetDeleteArray(&deleteArray_TArtF3Param);
      instance.SetDestructor(&destruct_TArtF3Param);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtF3Param*)
   {
      return GenerateInitInstanceLocal((::TArtF3Param*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtF3Param*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtAnlProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtAnlProc(void *p = 0);
   static void *newArray_TArtAnlProc(Long_t size, void *p);
   static void delete_TArtAnlProc(void *p);
   static void deleteArray_TArtAnlProc(void *p);
   static void destruct_TArtAnlProc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtAnlProc*)
   {
      ::TArtAnlProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtAnlProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtAnlProc", ::TArtAnlProc::Class_Version(), "././TArtAnlProc.h", 28,
                  typeid(::TArtAnlProc), DefineBehavior(ptr, ptr),
                  &::TArtAnlProc::Dictionary, isa_proxy, 4,
                  sizeof(::TArtAnlProc) );
      instance.SetNew(&new_TArtAnlProc);
      instance.SetNewArray(&newArray_TArtAnlProc);
      instance.SetDelete(&delete_TArtAnlProc);
      instance.SetDeleteArray(&deleteArray_TArtAnlProc);
      instance.SetDestructor(&destruct_TArtAnlProc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtAnlProc*)
   {
      return GenerateInitInstanceLocal((::TArtAnlProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtAnlProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtRawEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRawEvent(void *p = 0);
   static void *newArray_TArtRawEvent(Long_t size, void *p);
   static void delete_TArtRawEvent(void *p);
   static void deleteArray_TArtRawEvent(void *p);
   static void destruct_TArtRawEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRawEvent*)
   {
      ::TArtRawEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRawEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRawEvent", ::TArtRawEvent::Class_Version(), "././TArtRawEvent.h", 24,
                  typeid(::TArtRawEvent), DefineBehavior(ptr, ptr),
                  &::TArtRawEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRawEvent) );
      instance.SetNew(&new_TArtRawEvent);
      instance.SetNewArray(&newArray_TArtRawEvent);
      instance.SetDelete(&delete_TArtRawEvent);
      instance.SetDeleteArray(&deleteArray_TArtRawEvent);
      instance.SetDestructor(&destruct_TArtRawEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtRawEvent*)
   {
      return GenerateInitInstanceLocal((::TArtRawEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRawEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtEventSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtEventSource(void *p = 0);
   static void *newArray_TArtEventSource(Long_t size, void *p);
   static void delete_TArtEventSource(void *p);
   static void deleteArray_TArtEventSource(void *p);
   static void destruct_TArtEventSource(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtEventSource*)
   {
      ::TArtEventSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtEventSource >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtEventSource", ::TArtEventSource::Class_Version(), "././TArtEventSource.h", 24,
                  typeid(::TArtEventSource), DefineBehavior(ptr, ptr),
                  &::TArtEventSource::Dictionary, isa_proxy, 4,
                  sizeof(::TArtEventSource) );
      instance.SetNew(&new_TArtEventSource);
      instance.SetNewArray(&newArray_TArtEventSource);
      instance.SetDelete(&delete_TArtEventSource);
      instance.SetDeleteArray(&deleteArray_TArtEventSource);
      instance.SetDestructor(&destruct_TArtEventSource);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtEventSource*)
   {
      return GenerateInitInstanceLocal((::TArtEventSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtEventSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtProc(void *p = 0);
   static void *newArray_TArtProc(Long_t size, void *p);
   static void delete_TArtProc(void *p);
   static void deleteArray_TArtProc(void *p);
   static void destruct_TArtProc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtProc*)
   {
      ::TArtProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtProc", ::TArtProc::Class_Version(), "././TArtProc.h", 9,
                  typeid(::TArtProc), DefineBehavior(ptr, ptr),
                  &::TArtProc::Dictionary, isa_proxy, 4,
                  sizeof(::TArtProc) );
      instance.SetNew(&new_TArtProc);
      instance.SetNewArray(&newArray_TArtProc);
      instance.SetDelete(&delete_TArtProc);
      instance.SetDeleteArray(&deleteArray_TArtProc);
      instance.SetDestructor(&destruct_TArtProc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtProc*)
   {
      return GenerateInitInstanceLocal((::TArtProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TArtSortProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtSortProc(void *p = 0);
   static void *newArray_TArtSortProc(Long_t size, void *p);
   static void delete_TArtSortProc(void *p);
   static void deleteArray_TArtSortProc(void *p);
   static void destruct_TArtSortProc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSortProc*)
   {
      ::TArtSortProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtSortProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSortProc", ::TArtSortProc::Class_Version(), "././TArtSortProc.h", 33,
                  typeid(::TArtSortProc), DefineBehavior(ptr, ptr),
                  &::TArtSortProc::Dictionary, isa_proxy, 4,
                  sizeof(::TArtSortProc) );
      instance.SetNew(&new_TArtSortProc);
      instance.SetNewArray(&newArray_TArtSortProc);
      instance.SetDelete(&delete_TArtSortProc);
      instance.SetDeleteArray(&deleteArray_TArtSortProc);
      instance.SetDestructor(&destruct_TArtSortProc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TArtSortProc*)
   {
      return GenerateInitInstanceLocal((::TArtSortProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSortProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TArtAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtAnalysis::Class_Name()
{
   return "TArtAnalysis";
}

//______________________________________________________________________________
const char *TArtAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtUnpackEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtUnpackEvent::Class_Name()
{
   return "TArtUnpackEvent";
}

//______________________________________________________________________________
const char *TArtUnpackEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtUnpackEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtUnpackEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtUnpackEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtUnpackEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtUnpackEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtUnpackEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtUnpackEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtSortEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtSortEvent::Class_Name()
{
   return "TArtSortEvent";
}

//______________________________________________________________________________
const char *TArtSortEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtSortEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtSortEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtSortEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtSortEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtSortEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtSortEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtSortEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtAnlEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtAnlEvent::Class_Name()
{
   return "TArtAnlEvent";
}

//______________________________________________________________________________
const char *TArtAnlEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtAnlEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtAnlEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtAnlEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtF2Param::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtF2Param::Class_Name()
{
   return "TArtF2Param";
}

//______________________________________________________________________________
const char *TArtF2Param::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtF2Param*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtF2Param::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtF2Param*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtF2Param::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtF2Param*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtF2Param::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtF2Param*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtF3Param::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtF3Param::Class_Name()
{
   return "TArtF3Param";
}

//______________________________________________________________________________
const char *TArtF3Param::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtF3Param*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtF3Param::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtF3Param*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtF3Param::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtF3Param*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtF3Param::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtF3Param*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtAnlProc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtAnlProc::Class_Name()
{
   return "TArtAnlProc";
}

//______________________________________________________________________________
const char *TArtAnlProc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtAnlProc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtAnlProc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtAnlProc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtAnlProc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtRawEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRawEvent::Class_Name()
{
   return "TArtRawEvent";
}

//______________________________________________________________________________
const char *TArtRawEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtRawEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRawEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtRawEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRawEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtRawEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRawEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtRawEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtEventSource::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtEventSource::Class_Name()
{
   return "TArtEventSource";
}

//______________________________________________________________________________
const char *TArtEventSource::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtEventSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtEventSource::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtEventSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtEventSource::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtEventSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtEventSource::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtEventSource*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtProc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtProc::Class_Name()
{
   return "TArtProc";
}

//______________________________________________________________________________
const char *TArtProc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtProc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtProc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtProc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtProc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TArtSortProc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TArtSortProc::Class_Name()
{
   return "TArtSortProc";
}

//______________________________________________________________________________
const char *TArtSortProc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtSortProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtSortProc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TArtSortProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtSortProc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtSortProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtSortProc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TArtSortProc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TArtAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void TArtAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtAnalysis.
      TClass *R__cl = ::TArtAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      TGo4Analysis::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtAnalysis(void *p) {
      return  p ? new(p) ::TArtAnalysis : new ::TArtAnalysis;
   }
   static void *newArray_TArtAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::TArtAnalysis[nElements] : new ::TArtAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtAnalysis(void *p) {
      delete ((::TArtAnalysis*)p);
   }
   static void deleteArray_TArtAnalysis(void *p) {
      delete [] ((::TArtAnalysis*)p);
   }
   static void destruct_TArtAnalysis(void *p) {
      typedef ::TArtAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtAnalysis

//______________________________________________________________________________
void TArtF2Param::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtF2Param.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtF2Param::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtF2Param::Class(),this);
   }
}

//______________________________________________________________________________
void TArtF2Param::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtF2Param.
      TClass *R__cl = ::TArtF2Param::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFill", &fFill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutput", &fOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFactor", &fFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frP1", &frP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frP2", &frP2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbHisto", &fbHisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArr", &fArr);
      R__insp.InspectMember(fArr, "fArr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_ch2ns_XL", &fF2UPPAC_ch2ns_XL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_ch2ns_XR", &fF2UPPAC_ch2ns_XR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_ch2ns_YD", &fF2UPPAC_ch2ns_YD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_ch2ns_YU", &fF2UPPAC_ch2ns_YU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_ns2mm_X", &fF2UPPAC_ns2mm_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_ns2mm_Y", &fF2UPPAC_ns2mm_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_inoffset_X", &fF2UPPAC_inoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_inoffset_Y", &fF2UPPAC_inoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_outoffset_X", &fF2UPPAC_outoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_outoffset_Y", &fF2UPPAC_outoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_geomoffset_X", &fF2UPPAC_geomoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_geomoffset_Y", &fF2UPPAC_geomoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_offset_X", &fF2UPPAC_offset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2UPPAC_offset_Y", &fF2UPPAC_offset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_ch2ns_XL", &fF2DPPAC_ch2ns_XL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_ch2ns_XR", &fF2DPPAC_ch2ns_XR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_ch2ns_YD", &fF2DPPAC_ch2ns_YD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_ch2ns_YU", &fF2DPPAC_ch2ns_YU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_ns2mm_X", &fF2DPPAC_ns2mm_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_ns2mm_Y", &fF2DPPAC_ns2mm_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_inoffset_X", &fF2DPPAC_inoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_inoffset_Y", &fF2DPPAC_inoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_outoffset_X", &fF2DPPAC_outoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_outoffset_Y", &fF2DPPAC_outoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_geomoffset_X", &fF2DPPAC_geomoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_geomoffset_Y", &fF2DPPAC_geomoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_offset_X", &fF2DPPAC_offset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF2DPPAC_offset_Y", &fF2DPPAC_offset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpos[11]", zpos);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtF2Param(void *p) {
      return  p ? new(p) ::TArtF2Param : new ::TArtF2Param;
   }
   static void *newArray_TArtF2Param(Long_t nElements, void *p) {
      return p ? new(p) ::TArtF2Param[nElements] : new ::TArtF2Param[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtF2Param(void *p) {
      delete ((::TArtF2Param*)p);
   }
   static void deleteArray_TArtF2Param(void *p) {
      delete [] ((::TArtF2Param*)p);
   }
   static void destruct_TArtF2Param(void *p) {
      typedef ::TArtF2Param current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtF2Param

//______________________________________________________________________________
void TArtF3Param::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtF3Param.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtF3Param::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtF3Param::Class(),this);
   }
}

//______________________________________________________________________________
void TArtF3Param::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtF3Param.
      TClass *R__cl = ::TArtF3Param::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFill", &fFill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutput", &fOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFactor", &fFactor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frP1", &frP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frP2", &frP2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbHisto", &fbHisto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fArr", &fArr);
      R__insp.InspectMember(fArr, "fArr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_ch2ns_XL", &fF3UPPAC_ch2ns_XL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_ch2ns_XR", &fF3UPPAC_ch2ns_XR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_ch2ns_YD", &fF3UPPAC_ch2ns_YD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_ch2ns_YU", &fF3UPPAC_ch2ns_YU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_ns2mm_X", &fF3UPPAC_ns2mm_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_ns2mm_Y", &fF3UPPAC_ns2mm_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_inoffset_X", &fF3UPPAC_inoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_inoffset_Y", &fF3UPPAC_inoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_outoffset_X", &fF3UPPAC_outoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_outoffset_Y", &fF3UPPAC_outoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_geomoffset_X", &fF3UPPAC_geomoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_geomoffset_Y", &fF3UPPAC_geomoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_offset_X", &fF3UPPAC_offset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3UPPAC_offset_Y", &fF3UPPAC_offset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_ch2ns_XL", &fF3DPPAC_ch2ns_XL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_ch2ns_XR", &fF3DPPAC_ch2ns_XR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_ch2ns_YD", &fF3DPPAC_ch2ns_YD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_ch2ns_YU", &fF3DPPAC_ch2ns_YU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_ns2mm_X", &fF3DPPAC_ns2mm_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_ns2mm_Y", &fF3DPPAC_ns2mm_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_inoffset_X", &fF3DPPAC_inoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_inoffset_Y", &fF3DPPAC_inoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_outoffset_X", &fF3DPPAC_outoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_outoffset_Y", &fF3DPPAC_outoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_geomoffset_X", &fF3DPPAC_geomoffset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_geomoffset_Y", &fF3DPPAC_geomoffset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_offset_X", &fF3DPPAC_offset_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF3DPPAC_offset_Y", &fF3DPPAC_offset_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpos[11]", zpos);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtF3Param(void *p) {
      return  p ? new(p) ::TArtF3Param : new ::TArtF3Param;
   }
   static void *newArray_TArtF3Param(Long_t nElements, void *p) {
      return p ? new(p) ::TArtF3Param[nElements] : new ::TArtF3Param[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtF3Param(void *p) {
      delete ((::TArtF3Param*)p);
   }
   static void deleteArray_TArtF3Param(void *p) {
      delete [] ((::TArtF3Param*)p);
   }
   static void destruct_TArtF3Param(void *p) {
      typedef ::TArtF3Param current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtF3Param

//______________________________________________________________________________
void TArtUnpackEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtUnpackEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtUnpackEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtUnpackEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TArtUnpackEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtUnpackEvent.
      TClass *R__cl = ::TArtUnpackEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawdata[4][100][100][33]", rawdata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v1190[60][128][20]", v1190);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtUnpackEvent(void *p) {
      return  p ? new(p) ::TArtUnpackEvent : new ::TArtUnpackEvent;
   }
   static void *newArray_TArtUnpackEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TArtUnpackEvent[nElements] : new ::TArtUnpackEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtUnpackEvent(void *p) {
      delete ((::TArtUnpackEvent*)p);
   }
   static void deleteArray_TArtUnpackEvent(void *p) {
      delete [] ((::TArtUnpackEvent*)p);
   }
   static void destruct_TArtUnpackEvent(void *p) {
      typedef ::TArtUnpackEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtUnpackEvent

//______________________________________________________________________________
void TArtSortEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtSortEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtSortEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtSortEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TArtSortEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtSortEvent.
      TClass *R__cl = ::TArtSortEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F1FIBER_time[310]", F1FIBER_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F1FIBER_Y_POS[310]", F1FIBER_Y_POS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F1_Tref", &F1_Tref);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_L", &F2UPPAC_L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_D", &F2UPPAC_D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_R", &F2UPPAC_R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_U", &F2UPPAC_U);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_A", &F2UPPAC_A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_L", &F2DPPAC_L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_D", &F2DPPAC_D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_R", &F2DPPAC_R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_U", &F2DPPAC_U);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_A", &F2DPPAC_A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_L", &F3UPPAC_L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_D", &F3UPPAC_D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_R", &F3UPPAC_R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_U", &F3UPPAC_U);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_A", &F3UPPAC_A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_L", &F3DPPAC_L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_D", &F3DPPAC_D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_R", &F3DPPAC_R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_U", &F3DPPAC_U);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_A", &F3DPPAC_A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2PLASTIC", &F2PLASTIC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3PLASTIC_L", &F3PLASTIC_L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3PLASTIC_R", &F3PLASTIC_R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RFrequ", &RFrequ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2PLASTIC_T", &F2PLASTIC_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3PLASTIC_L_T", &F3PLASTIC_L_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3PLASTIC_R_T", &F3PLASTIC_R_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2SSD", &F2SSD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3SSD", &F3SSD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2_Silicon", &F2_Silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3_Silicon", &F3_Silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2_Scint_Q", &F2_Scint_Q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2_Scint_T", &F2_Scint_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2_RF", &F2_RF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2_Tref", &F2_Tref);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PPAC_Trg", &PPAC_Trg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3VETO_L", &F3VETO_L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3VETO_R", &F3VETO_R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3VETO_L_T", &F3VETO_L_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3VETO_R_T", &F3VETO_R_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3NaI_H", &F3NaI_H);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3NaI_L", &F3NaI_L);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3MUSIC_E[8]", F3MUSIC_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3MUSIC_T[8]", F3MUSIC_T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3MUSIC_dE", &F3MUSIC_dE);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtSortEvent(void *p) {
      return  p ? new(p) ::TArtSortEvent : new ::TArtSortEvent;
   }
   static void *newArray_TArtSortEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TArtSortEvent[nElements] : new ::TArtSortEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtSortEvent(void *p) {
      delete ((::TArtSortEvent*)p);
   }
   static void deleteArray_TArtSortEvent(void *p) {
      delete [] ((::TArtSortEvent*)p);
   }
   static void destruct_TArtSortEvent(void *p) {
      typedef ::TArtSortEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtSortEvent

//______________________________________________________________________________
void TArtAnlEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtAnlEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtAnlEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtAnlEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TArtAnlEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtAnlEvent.
      TClass *R__cl = ::TArtAnlEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dr", &dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_Xns", &F2UPPAC_Xns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_Yns", &F2UPPAC_Yns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_Xns", &F2DPPAC_Xns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_Yns", &F2DPPAC_Yns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_Xmm", &F2UPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2UPPAC_Ymm", &F2UPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_Xmm", &F2DPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2DPPAC_Ymm", &F2DPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_Xns", &F3UPPAC_Xns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_Yns", &F3UPPAC_Yns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_Xns", &F3DPPAC_Xns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_Yns", &F3DPPAC_Yns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_Xmm", &F3UPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3UPPAC_Ymm", &F3UPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_Xmm", &F3DPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F3DPPAC_Ymm", &F3DPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_prof_x[11]", Beam_prof_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_prof_y[11]", Beam_prof_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dr_ang", &dr_ang);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_trck_X", &Beam_trck_X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beam_trck_Y", &Beam_trck_Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2Sil_Energy", &F2Sil_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F2Scint_Cal_ToF", &F2Scint_Cal_ToF);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtAnlEvent(void *p) {
      return  p ? new(p) ::TArtAnlEvent : new ::TArtAnlEvent;
   }
   static void *newArray_TArtAnlEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TArtAnlEvent[nElements] : new ::TArtAnlEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtAnlEvent(void *p) {
      delete ((::TArtAnlEvent*)p);
   }
   static void deleteArray_TArtAnlEvent(void *p) {
      delete [] ((::TArtAnlEvent*)p);
   }
   static void destruct_TArtAnlEvent(void *p) {
      typedef ::TArtAnlEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtAnlEvent

//______________________________________________________________________________
void TArtProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtProc::Class(),this);
   }
}

//______________________________________________________________________________
void TArtProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtProc.
      TClass *R__cl = ::TArtProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHis1", &fHis1);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtProc(void *p) {
      return  p ? new(p) ::TArtProc : new ::TArtProc;
   }
   static void *newArray_TArtProc(Long_t nElements, void *p) {
      return p ? new(p) ::TArtProc[nElements] : new ::TArtProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtProc(void *p) {
      delete ((::TArtProc*)p);
   }
   static void deleteArray_TArtProc(void *p) {
      delete [] ((::TArtProc*)p);
   }
   static void destruct_TArtProc(void *p) {
      typedef ::TArtProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtProc

//______________________________________________________________________________
void TArtSortProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtSortProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtSortProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtSortProc::Class(),this);
   }
}

//______________________________________________________________________________
void TArtSortProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtSortProc.
      TClass *R__cl = ::TArtSortProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ppac", &ppac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fiber", &fiber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plastic", &plastic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*csi", &csi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*neutron", &neutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gate[20]", &gate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hExpDet[1000]", &hExpDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analist[10]", analist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showrawdata", &showrawdata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valnaok[10][10][256]", valnaok);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rawdt[10][10][256]", rawdt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V1190refval", &V1190refval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExpNumDets", &ExpNumDets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ExpDetRaw[1000]", ExpDetRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist1[1000]", hist1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist2[1000]", hist2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gate1[10]", gate1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gate2[10]", gate2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhst1", &nhst1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhst2", &nhst2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ngate1", &ngate1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ngate2", &ngate2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fi", (void*)&fi);
      R__insp.InspectMember("ifstream", (void*)&fi, "fi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapfile[30]", mapfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hstfile[30]", hstfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiberprmfile[30]", fiberprmfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ppacprmfile[30]", ppacprmfile);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtSortProc(void *p) {
      return  p ? new(p) ::TArtSortProc : new ::TArtSortProc;
   }
   static void *newArray_TArtSortProc(Long_t nElements, void *p) {
      return p ? new(p) ::TArtSortProc[nElements] : new ::TArtSortProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtSortProc(void *p) {
      delete ((::TArtSortProc*)p);
   }
   static void deleteArray_TArtSortProc(void *p) {
      delete [] ((::TArtSortProc*)p);
   }
   static void destruct_TArtSortProc(void *p) {
      typedef ::TArtSortProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtSortProc

//______________________________________________________________________________
void TArtAnlProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtAnlProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtAnlProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtAnlProc::Class(),this);
   }
}

//______________________________________________________________________________
void TArtAnlProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtAnlProc.
      TClass *R__cl = ::TArtAnlProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TPC_PID_Center[4]", &TPC_PID_Center);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_UPPAC_XT", &F2_UPPAC_XT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_UPPAC_YT", &F2_UPPAC_YT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_UPPAC_Xmm", &F2_UPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_UPPAC_Ymm", &F2_UPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_UPPAC_XYT", &F2_UPPAC_XYT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_UPPAC_XYmm", &F2_UPPAC_XYmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_UPPAC_XYmm_cond", &F2_UPPAC_XYmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_XYmm_cond", &F2_DPPAC_XYmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_PPAC_ZXmm_cond", &F2_PPAC_ZXmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_PPAC_ZYmm_cond", &F2_PPAC_ZYmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_UPPAC_XYmm_cond", &F3_UPPAC_XYmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_XYmm_cond", &F3_DPPAC_XYmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_PPAC_ZXmm_cond", &F3_PPAC_ZXmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_PPAC_ZYmm_cond", &F3_PPAC_ZYmm_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_YUT", &F2_DPPAC_YUT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_XT", &F2_DPPAC_XT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_YT", &F2_DPPAC_YT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_Xmm", &F2_DPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_Ymm", &F2_DPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_XYT", &F2_DPPAC_XYT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_DPPAC_XYmm", &F2_DPPAC_XYmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_PPAC_ZXmm", &F2_PPAC_ZXmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_PPAC_ZYmm", &F2_PPAC_ZYmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_UPPAC_XT", &F3_UPPAC_XT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_UPPAC_YT", &F3_UPPAC_YT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_UPPAC_Xmm", &F3_UPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_UPPAC_Ymm", &F3_UPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_UPPAC_XYT", &F3_UPPAC_XYT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_UPPAC_XYmm", &F3_UPPAC_XYmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_YUT", &F3_DPPAC_YUT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_XT", &F3_DPPAC_XT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_YT", &F3_DPPAC_YT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_Xmm", &F3_DPPAC_Xmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_Ymm", &F3_DPPAC_Ymm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_XYT", &F3_DPPAC_XYT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_DPPAC_XYmm", &F3_DPPAC_XYmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_PPAC_ZXmm", &F3_PPAC_ZXmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F3_PPAC_ZYmm", &F3_PPAC_ZYmm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beam_profile_z[9]", &Beam_profile_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beam_profile_z_cond[9]", &Beam_profile_z_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beam_profile_z_cond5[9]", &Beam_profile_z_cond5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beam_profile_z_cond6[9]", &Beam_profile_z_cond6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beam_profile_z_cond7[9]", &Beam_profile_z_cond7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_Sil_Energy", &F2_Sil_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*F2_Scint_TOF", &F2_Scint_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beam_trckZX", &Beam_trckZX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beam_trckZY", &Beam_trckZY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PID_RF_Scint_cond", &PID_RF_Scint_cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RF1_F3Si_Anl", &RF1_F3Si_Anl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RF_Cond", &RF_Cond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fF2Param", &fF2Param);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fF3Param", &fF3Param);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWinCon", &fWinCon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PID_Raw_GATE_Scint", &PID_Raw_GATE_Scint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PID_Raw_GATE_Anl", &PID_Raw_GATE_Anl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*randomnum", &randomnum);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtAnlProc(void *p) {
      return  p ? new(p) ::TArtAnlProc : new ::TArtAnlProc;
   }
   static void *newArray_TArtAnlProc(Long_t nElements, void *p) {
      return p ? new(p) ::TArtAnlProc[nElements] : new ::TArtAnlProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtAnlProc(void *p) {
      delete ((::TArtAnlProc*)p);
   }
   static void deleteArray_TArtAnlProc(void *p) {
      delete [] ((::TArtAnlProc*)p);
   }
   static void destruct_TArtAnlProc(void *p) {
      typedef ::TArtAnlProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtAnlProc

//______________________________________________________________________________
void TArtEventSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtEventSource.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtEventSource::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtEventSource::Class(),this);
   }
}

//______________________________________________________________________________
void TArtEventSource::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtEventSource.
      TClass *R__cl = ::TArtEventSource::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbIsOpen", &fbIsOpen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fxArgs", &fxArgs);
      R__insp.InspectMember(fxArgs, "fxArgs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiPort", &fiPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*estore", &estore);
      TGo4EventSource::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtEventSource(void *p) {
      return  p ? new(p) ::TArtEventSource : new ::TArtEventSource;
   }
   static void *newArray_TArtEventSource(Long_t nElements, void *p) {
      return p ? new(p) ::TArtEventSource[nElements] : new ::TArtEventSource[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtEventSource(void *p) {
      delete ((::TArtEventSource*)p);
   }
   static void deleteArray_TArtEventSource(void *p) {
      delete [] ((::TArtEventSource*)p);
   }
   static void destruct_TArtEventSource(void *p) {
      typedef ::TArtEventSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtEventSource

//______________________________________________________________________________
void TArtRawEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRawEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRawEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRawEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRawEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRawEvent.
      TClass *R__cl = ::TArtRawEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*raweve", &raweve);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TArtRawEvent(void *p) {
      return  p ? new(p) ::TArtRawEvent : new ::TArtRawEvent;
   }
   static void *newArray_TArtRawEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRawEvent[nElements] : new ::TArtRawEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRawEvent(void *p) {
      delete ((::TArtRawEvent*)p);
   }
   static void deleteArray_TArtRawEvent(void *p) {
      delete [] ((::TArtRawEvent*)p);
   }
   static void destruct_TArtRawEvent(void *p) {
      typedef ::TArtRawEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TArtRawEvent

/********************************************************
* G__Art.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__Art();

extern "C" void G__set_cpp_environmentG__Art() {
  G__cpp_reset_tagtableG__Art();
}
#include <new>
extern "C" int G__cpp_dllrevG__Art() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TArtAnalysis */
static int G__G__Art_707_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnalysis[n];
     } else {
       p = new((void*) gvp) TArtAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnalysis;
     } else {
       p = new((void*) gvp) TArtAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtAnalysis((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TArtAnalysis((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_707_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_707_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtAnalysis(*(TArtAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtAnalysis G__TTArtAnalysis;
static int G__G__Art_707_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtAnalysis*) (soff+(sizeof(TArtAnalysis)*i)))->~G__TTArtAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtAnalysis*) (soff))->~G__TTArtAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_707_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnalysis* dest = (TArtAnalysis*) G__getstructoffset();
   *dest = *(TArtAnalysis*) libp->para[0].ref;
   const TArtAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtUnpackEvent */
static int G__G__Art_708_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtUnpackEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtUnpackEvent[n];
     } else {
       p = new((void*) gvp) TArtUnpackEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtUnpackEvent;
     } else {
       p = new((void*) gvp) TArtUnpackEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtUnpackEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtUnpackEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtUnpackEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtUnpackEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtUnpackEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtUnpackEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtUnpackEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtUnpackEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtUnpackEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtUnpackEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtUnpackEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_708_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtUnpackEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_708_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtUnpackEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtUnpackEvent(*(TArtUnpackEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtUnpackEvent G__TTArtUnpackEvent;
static int G__G__Art_708_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtUnpackEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtUnpackEvent*) (soff+(sizeof(TArtUnpackEvent)*i)))->~G__TTArtUnpackEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtUnpackEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtUnpackEvent*) (soff))->~G__TTArtUnpackEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_708_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtUnpackEvent* dest = (TArtUnpackEvent*) G__getstructoffset();
   *dest = *(TArtUnpackEvent*) libp->para[0].ref;
   const TArtUnpackEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSortEvent */
static int G__G__Art_709_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSortEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSortEvent[n];
     } else {
       p = new((void*) gvp) TArtSortEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSortEvent;
     } else {
       p = new((void*) gvp) TArtSortEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSortEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtSortEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtSortEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtSortEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSortEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtSortEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSortEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSortEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSortEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSortEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSortEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_709_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSortEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_709_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSortEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSortEvent(*(TArtSortEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSortEvent G__TTArtSortEvent;
static int G__G__Art_709_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSortEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSortEvent*) (soff+(sizeof(TArtSortEvent)*i)))->~G__TTArtSortEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSortEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSortEvent*) (soff))->~G__TTArtSortEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_709_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSortEvent* dest = (TArtSortEvent*) G__getstructoffset();
   *dest = *(TArtSortEvent*) libp->para[0].ref;
   const TArtSortEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtAnlEvent */
static int G__G__Art_710_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnlEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnlEvent[n];
     } else {
       p = new((void*) gvp) TArtAnlEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnlEvent;
     } else {
       p = new((void*) gvp) TArtAnlEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnlEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtAnlEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtAnlEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnlEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnlEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtAnlEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnlEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnlEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnlEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnlEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnlEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_710_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnlEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_710_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtAnlEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtAnlEvent(*(TArtAnlEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtAnlEvent G__TTArtAnlEvent;
static int G__G__Art_710_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtAnlEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtAnlEvent*) (soff+(sizeof(TArtAnlEvent)*i)))->~G__TTArtAnlEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtAnlEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtAnlEvent*) (soff))->~G__TTArtAnlEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_710_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnlEvent* dest = (TArtAnlEvent*) G__getstructoffset();
   *dest = *(TArtAnlEvent*) libp->para[0].ref;
   const TArtAnlEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtF2Param */
static int G__G__Art_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtF2Param* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtF2Param[n];
     } else {
       p = new((void*) gvp) TArtF2Param[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtF2Param;
     } else {
       p = new((void*) gvp) TArtF2Param;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtF2Param* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtF2Param((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtF2Param((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtF2Param*) G__getstructoffset())->PrintParameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtF2Param::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtF2Param::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtF2Param::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtF2Param::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtF2Param*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtF2Param::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtF2Param::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtF2Param::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_714_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtF2Param::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_714_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtF2Param* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtF2Param(*(TArtF2Param*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtF2Param G__TTArtF2Param;
static int G__G__Art_714_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtF2Param*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtF2Param*) (soff+(sizeof(TArtF2Param)*i)))->~G__TTArtF2Param();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtF2Param*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtF2Param*) (soff))->~G__TTArtF2Param();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_714_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtF2Param* dest = (TArtF2Param*) G__getstructoffset();
   *dest = *(TArtF2Param*) libp->para[0].ref;
   const TArtF2Param& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtF3Param */
static int G__G__Art_715_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtF3Param* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtF3Param[n];
     } else {
       p = new((void*) gvp) TArtF3Param[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtF3Param;
     } else {
       p = new((void*) gvp) TArtF3Param;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtF3Param* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtF3Param((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtF3Param((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtF3Param*) G__getstructoffset())->PrintParameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtF3Param::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtF3Param::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtF3Param::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtF3Param::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtF3Param*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtF3Param::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtF3Param::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtF3Param::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_715_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtF3Param::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_715_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtF3Param* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtF3Param(*(TArtF3Param*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtF3Param G__TTArtF3Param;
static int G__G__Art_715_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtF3Param*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtF3Param*) (soff+(sizeof(TArtF3Param)*i)))->~G__TTArtF3Param();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtF3Param*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtF3Param*) (soff))->~G__TTArtF3Param();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_715_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtF3Param* dest = (TArtF3Param*) G__getstructoffset();
   *dest = *(TArtF3Param*) libp->para[0].ref;
   const TArtF3Param& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtAnlProc */
static int G__G__Art_716_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnlProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnlProc[n];
     } else {
       p = new((void*) gvp) TArtAnlProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnlProc;
     } else {
       p = new((void*) gvp) TArtAnlProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnlProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtAnlProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtAnlProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnlProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnlProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtAnlProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnlProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnlProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnlProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnlProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnlProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_716_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnlProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_716_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtAnlProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtAnlProc(*(TArtAnlProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtAnlProc G__TTArtAnlProc;
static int G__G__Art_716_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtAnlProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtAnlProc*) (soff+(sizeof(TArtAnlProc)*i)))->~G__TTArtAnlProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtAnlProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtAnlProc*) (soff))->~G__TTArtAnlProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_716_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnlProc* dest = (TArtAnlProc*) G__getstructoffset();
   *dest = *(TArtAnlProc*) libp->para[0].ref;
   const TArtAnlProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRawEvent */
static int G__G__Art_717_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawEvent[n];
     } else {
       p = new((void*) gvp) TArtRawEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawEvent;
     } else {
       p = new((void*) gvp) TArtRawEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRawEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtRawEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRawEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRawEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRawEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_717_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_717_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRawEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRawEvent(*(TArtRawEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRawEvent G__TTArtRawEvent;
static int G__G__Art_717_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRawEvent*) (soff+(sizeof(TArtRawEvent)*i)))->~G__TTArtRawEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRawEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRawEvent*) (soff))->~G__TTArtRawEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_717_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawEvent* dest = (TArtRawEvent*) G__getstructoffset();
   *dest = *(TArtRawEvent*) libp->para[0].ref;
   const TArtRawEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtEventSource */
static int G__G__Art_719_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtEventSource[n];
     } else {
       p = new((void*) gvp) TArtEventSource[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtEventSource;
     } else {
       p = new((void*) gvp) TArtEventSource;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtEventSource(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TArtEventSource(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtEventSource((TGo4UserSourceParameter*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtEventSource((TGo4UserSourceParameter*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtEventSource*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtEventSource*) G__getstructoffset())->Close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TArtEventSource*) G__getstructoffset())->GetArgs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventSource*) G__getstructoffset())->SetArgs((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtEventSource*) G__getstructoffset())->GetPort());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventSource*) G__getstructoffset())->SetPort((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtEventSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtEventSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtEventSource::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventSource*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtEventSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_719_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtEventSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_719_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtEventSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtEventSource(*(TArtEventSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtEventSource G__TTArtEventSource;
static int G__G__Art_719_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtEventSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtEventSource*) (soff+(sizeof(TArtEventSource)*i)))->~G__TTArtEventSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtEventSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtEventSource*) (soff))->~G__TTArtEventSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_719_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventSource* dest = (TArtEventSource*) G__getstructoffset();
   *dest = *(TArtEventSource*) libp->para[0].ref;
   const TArtEventSource& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtProc */
static int G__G__Art_722_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtProc[n];
     } else {
       p = new((void*) gvp) TArtProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtProc;
     } else {
       p = new((void*) gvp) TArtProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_722_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__Art_722_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtProc(*(TArtProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtProc G__TTArtProc;
static int G__G__Art_722_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtProc*) (soff+(sizeof(TArtProc)*i)))->~G__TTArtProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtProc*) (soff))->~G__TTArtProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__Art_722_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtProc* dest = (TArtProc*) G__getstructoffset();
   *dest = *(TArtProc*) libp->para[0].ref;
   const TArtProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSortProc */
static int G__G__Art_753_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSortProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSortProc[n];
     } else {
       p = new((void*) gvp) TArtSortProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSortProc;
     } else {
       p = new((void*) gvp) TArtSortProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSortProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtSortProc((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtSortProc((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtSortProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSortProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtSortProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSortProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSortProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSortProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSortProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSortProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__Art_753_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSortProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSortProc G__TTArtSortProc;
static int G__G__Art_753_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSortProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSortProc*) (soff+(sizeof(TArtSortProc)*i)))->~G__TTArtSortProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSortProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSortProc*) (soff))->~G__TTArtSortProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TArtAnalysis */

/* TArtUnpackEvent */

/* TArtSortEvent */

/* TArtAnlEvent */

/* TArtF2Param */

/* TArtF3Param */

/* TArtAnlProc */

/* TArtRawEvent */

/* TArtEventSource */

/* TArtProc */

/* TArtSortProc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__Art {
 public:
  G__Sizep2memfuncG__Art(): p(&G__Sizep2memfuncG__Art::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__Art::*p)();
};

size_t G__get_sizep2memfuncG__Art()
{
  G__Sizep2memfuncG__Art a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__Art() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis))) {
     TArtAnalysis *G__Lderived;
     G__Lderived=(TArtAnalysis*)0x1000;
     {
       TGo4Analysis *G__Lpbase=(TGo4Analysis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis),G__get_linked_tagnum(&G__G__ArtLN_TGo4Analysis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4CommandReceiver *G__Lpbase=(TGo4CommandReceiver*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis),G__get_linked_tagnum(&G__G__ArtLN_TGo4CommandReceiver),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent))) {
     TArtUnpackEvent *G__Lderived;
     G__Lderived=(TArtUnpackEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent))) {
     TArtSortEvent *G__Lderived;
     G__Lderived=(TArtSortEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent))) {
     TArtAnlEvent *G__Lderived;
     G__Lderived=(TArtAnlEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param))) {
     TArtF2Param *G__Lderived;
     G__Lderived=(TArtF2Param*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param),G__get_linked_tagnum(&G__G__ArtLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param))) {
     TArtF3Param *G__Lderived;
     G__Lderived=(TArtF3Param*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param),G__get_linked_tagnum(&G__G__ArtLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc))) {
     TArtAnlProc *G__Lderived;
     G__Lderived=(TArtAnlProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent))) {
     TArtRawEvent *G__Lderived;
     G__Lderived=(TArtRawEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource))) {
     TArtEventSource *G__Lderived;
     G__Lderived=(TArtEventSource*)0x1000;
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtProc))) {
     TArtProc *G__Lderived;
     G__Lderived=(TArtProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtProc),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtProc),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtProc),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtProc),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc))) {
     TArtSortProc *G__Lderived;
     G__Lderived=(TArtSortProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc),G__get_linked_tagnum(&G__G__ArtLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc),G__get_linked_tagnum(&G__G__ArtLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc),G__get_linked_tagnum(&G__G__ArtLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__Art() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__ArtLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__ArtLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ArtLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ArtLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__ArtLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__ArtLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawDataObject*>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawFADCDataObject*>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawATDataObject*>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawSegmentObject*>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawScalerObject*>",117,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__ArtLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TArtAnalysis */
static void G__setup_memvarTArtAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis));
   { TArtAnalysis *p; p=(TArtAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtUnpackEvent */
static void G__setup_memvarTArtUnpackEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent));
   { TArtUnpackEvent *p; p=(TArtUnpackEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->rawdata)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"rawdata[4][100][100][33]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v1190)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"v1190[60][128][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtSortEvent */
static void G__setup_memvarTArtSortEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent));
   { TArtSortEvent *p; p=(TArtSortEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->F1FIBER_time)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F1FIBER_time[310]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F1FIBER_Y_POS)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F1FIBER_Y_POS[310]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F1_Tref)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F1_Tref=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_L)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2UPPAC_L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_D)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2UPPAC_D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_R)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2UPPAC_R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_U)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2UPPAC_U=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_A)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2UPPAC_A=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_L)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2DPPAC_L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_D)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2DPPAC_D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_R)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2DPPAC_R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_U)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2DPPAC_U=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_A)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2DPPAC_A=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_L)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3UPPAC_L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_D)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3UPPAC_D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_R)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3UPPAC_R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_U)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3UPPAC_U=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_A)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3UPPAC_A=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_L)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3DPPAC_L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_D)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3DPPAC_D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_R)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3DPPAC_R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_U)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3DPPAC_U=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_A)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3DPPAC_A=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2PLASTIC)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2PLASTIC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3PLASTIC_L)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3PLASTIC_L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3PLASTIC_R)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3PLASTIC_R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RFrequ)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"RFrequ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2PLASTIC_T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2PLASTIC_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3PLASTIC_L_T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3PLASTIC_L_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3PLASTIC_R_T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3PLASTIC_R_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2SSD)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2SSD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3SSD)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3SSD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_Silicon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2_Silicon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_Silicon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3_Silicon=",0,"28052014 TETSUYA ADD");
   G__memvar_setup((void*)((long)(&p->F2_Scint_Q)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2_Scint_Q=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_Scint_T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2_Scint_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_RF)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2_RF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_Tref)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F2_Tref=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PPAC_Trg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"PPAC_Trg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3VETO_L)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3VETO_L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3VETO_R)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3VETO_R=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3VETO_L_T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3VETO_L_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3VETO_R_T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3VETO_R_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3NaI_H)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3NaI_H=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3NaI_L)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3NaI_L=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3MUSIC_E)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3MUSIC_E[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3MUSIC_T)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3MUSIC_T[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3MUSIC_dE)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"F3MUSIC_dE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtAnlEvent */
static void G__setup_memvarTArtAnlEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent));
   { TArtAnlEvent *p; p=(TArtAnlEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->dr)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_Xns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2UPPAC_Xns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_Yns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2UPPAC_Yns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_Xns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2DPPAC_Xns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_Yns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2DPPAC_Yns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_Xmm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2UPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2UPPAC_Ymm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2UPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_Xmm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2DPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2DPPAC_Ymm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2DPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_Xns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3UPPAC_Xns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_Yns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3UPPAC_Yns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_Xns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3DPPAC_Xns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_Yns)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3DPPAC_Yns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_Xmm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3UPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3UPPAC_Ymm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3UPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_Xmm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3DPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3DPPAC_Ymm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F3DPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_prof_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Beam_prof_x[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_prof_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Beam_prof_y[11]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dr_ang)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dr_ang=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_trck_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Beam_trck_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_trck_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Beam_trck_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2Sil_Energy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2Sil_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2Scint_Cal_ToF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"F2Scint_Cal_ToF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtF2Param */
static void G__setup_memvarTArtF2Param(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param));
   { TArtF2Param *p; p=(TArtF2Param*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fFill)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fFill=",0,"enable filling histograms ");
   G__memvar_setup((void*)((long)(&p->fOutput)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fOutput=",0,"enable filling TArt event");
   G__memvar_setup((void*)((long)(&p->fOffset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fOffset=",0,"offset used for unpack");
   G__memvar_setup((void*)((long)(&p->fFactor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fFactor=",0,"factor used for unpack");
   G__memvar_setup((void*)((long)(&p->frP1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frP1=",0,"Offset for calibration");
   G__memvar_setup((void*)((long)(&p->frP2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frP2=",0,"Factor for Calibration");
   G__memvar_setup((void*)((long)(&p->fbHisto)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fbHisto=",0,"Enable Histogramming");
   G__memvar_setup((void*)((long)(&p->fArr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArrayI),-1,-1,1,"fArr=",0,"example of usage of array in the parameter ");
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_ch2ns_XL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_ch2ns_XL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_ch2ns_XR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_ch2ns_XR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_ch2ns_YD)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_ch2ns_YD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_ch2ns_YU)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_ch2ns_YU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_ns2mm_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_ns2mm_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_ns2mm_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_ns2mm_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_inoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_inoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_inoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_inoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_outoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_outoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_outoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_outoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_geomoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_geomoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_geomoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_geomoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_offset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_offset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2UPPAC_offset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2UPPAC_offset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_ch2ns_XL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_ch2ns_XL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_ch2ns_XR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_ch2ns_XR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_ch2ns_YD)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_ch2ns_YD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_ch2ns_YU)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_ch2ns_YU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_ns2mm_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_ns2mm_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_ns2mm_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_ns2mm_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_inoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_inoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_inoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_inoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_outoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_outoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_outoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_outoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_geomoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_geomoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_geomoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_geomoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_offset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_offset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2DPPAC_offset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF2DPPAC_offset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"zpos[11]=",0,"Positions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtF3Param */
static void G__setup_memvarTArtF3Param(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param));
   { TArtF3Param *p; p=(TArtF3Param*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fFill)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fFill=",0,"enable filling histograms ");
   G__memvar_setup((void*)((long)(&p->fOutput)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fOutput=",0,"enable filling TArt event");
   G__memvar_setup((void*)((long)(&p->fOffset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fOffset=",0,"offset used for unpack");
   G__memvar_setup((void*)((long)(&p->fFactor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fFactor=",0,"factor used for unpack");
   G__memvar_setup((void*)((long)(&p->frP1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frP1=",0,"Offset for calibration");
   G__memvar_setup((void*)((long)(&p->frP2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frP2=",0,"Factor for Calibration");
   G__memvar_setup((void*)((long)(&p->fbHisto)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fbHisto=",0,"Enable Histogramming");
   G__memvar_setup((void*)((long)(&p->fArr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArrayI),-1,-1,1,"fArr=",0,"example of usage of array in the parameter ");
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_ch2ns_XL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_ch2ns_XL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_ch2ns_XR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_ch2ns_XR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_ch2ns_YD)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_ch2ns_YD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_ch2ns_YU)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_ch2ns_YU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_ns2mm_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_ns2mm_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_ns2mm_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_ns2mm_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_inoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_inoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_inoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_inoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_outoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_outoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_outoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_outoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_geomoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_geomoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_geomoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_geomoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_offset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_offset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3UPPAC_offset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3UPPAC_offset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_ch2ns_XL)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_ch2ns_XL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_ch2ns_XR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_ch2ns_XR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_ch2ns_YD)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_ch2ns_YD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_ch2ns_YU)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_ch2ns_YU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_ns2mm_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_ns2mm_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_ns2mm_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_ns2mm_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_inoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_inoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_inoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_inoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_outoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_outoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_outoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_outoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_geomoffset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_geomoffset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_geomoffset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_geomoffset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_offset_X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_offset_X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3DPPAC_offset_Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fF3DPPAC_offset_Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"zpos[11]=",0,"Positions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtAnlProc */
static void G__setup_memvarTArtAnlProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc));
   { TArtAnlProc *p; p=(TArtAnlProc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->TPC_PID_Center)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"TPC_PID_Center[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_UPPAC_XT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_UPPAC_XT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_UPPAC_YT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_UPPAC_YT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_UPPAC_Xmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_UPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_UPPAC_Ymm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_UPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_UPPAC_XYT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_UPPAC_XYT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_UPPAC_XYmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_UPPAC_XYmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_UPPAC_XYmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_UPPAC_XYmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_XYmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_DPPAC_XYmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_PPAC_ZXmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_PPAC_ZXmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_PPAC_ZYmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_PPAC_ZYmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_UPPAC_XYmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_UPPAC_XYmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_XYmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_DPPAC_XYmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_PPAC_ZXmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_PPAC_ZXmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_PPAC_ZYmm_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_PPAC_ZYmm_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_YUT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_DPPAC_YUT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_XT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_DPPAC_XT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_YT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_DPPAC_YT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_Xmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_DPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_Ymm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_DPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_XYT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_DPPAC_XYT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_DPPAC_XYmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_DPPAC_XYmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_PPAC_ZXmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_PPAC_ZXmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_PPAC_ZYmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F2_PPAC_ZYmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_UPPAC_XT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_UPPAC_XT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_UPPAC_YT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_UPPAC_YT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_UPPAC_Xmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_UPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_UPPAC_Ymm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_UPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_UPPAC_XYT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_UPPAC_XYT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_UPPAC_XYmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_UPPAC_XYmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_YUT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_DPPAC_YUT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_XT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_DPPAC_XT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_YT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_DPPAC_YT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_Xmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_DPPAC_Xmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_Ymm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F3_DPPAC_Ymm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_XYT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_DPPAC_XYT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_DPPAC_XYmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_DPPAC_XYmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_PPAC_ZXmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_PPAC_ZXmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F3_PPAC_ZYmm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"F3_PPAC_ZYmm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_profile_z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"Beam_profile_z[9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_profile_z_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"Beam_profile_z_cond[9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_profile_z_cond5)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"Beam_profile_z_cond5[9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_profile_z_cond6)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"Beam_profile_z_cond6[9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_profile_z_cond7)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"Beam_profile_z_cond7[9]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_Sil_Energy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_Sil_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->F2_Scint_TOF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"F2_Scint_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_trckZX)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"Beam_trckZX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Beam_trckZY)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"Beam_trckZY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_RF_Scint_cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"PID_RF_Scint_cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RF1_F3Si_Anl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH2),-1,-1,1,"RF1_F3Si_Anl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RF_Cond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"RF_Cond=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF2Param)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param),-1,-1,1,"fF2Param=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fF3Param)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param),-1,-1,1,"fF3Param=",0,"28952014 TETSUYA ADD");
   G__memvar_setup((void*)((long)(&p->fWinCon)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TGo4WinCond),-1,-1,1,"fWinCon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Raw_GATE_Scint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TGo4PolyCond),-1,-1,1,"PID_Raw_GATE_Scint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PID_Raw_GATE_Anl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TGo4PolyCond),-1,-1,1,"PID_Raw_GATE_Anl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->randomnum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TRandom),-1,-1,1,"randomnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRawEvent */
static void G__setup_memvarTArtRawEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent));
   { TArtRawEvent *p; p=(TArtRawEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->raweve)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtRawEventObject),-1,-1,1,"raweve=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtEventSource */
static void G__setup_memvarTArtEventSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource));
   { TArtEventSource *p; p=(TArtEventSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fbIsOpen=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TString),-1,-1,4,"fxArgs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fiPort=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtEventStore),-1,-1,4,"estore=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtProc */
static void G__setup_memvarTArtProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtProc));
   { TArtProc *p; p=(TArtProc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,4,"fHis1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtSortProc */
static void G__setup_memvarTArtSortProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc));
   { TArtSortProc *p; p=(TArtSortProc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ppac)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_EN_PPAC_Cal),-1,-1,1,"ppac=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fiber)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_ENFiberCal),-1,-1,1,"fiber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->plastic)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_ENPlastic),-1,-1,1,"plastic=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->csi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_EN_CsI),-1,-1,1,"csi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutron)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_EN_Neutron),-1,-1,1,"neutron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TGo4PolyCond),-1,-1,1,"gate[20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hExpDet)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TH1),-1,-1,1,"hExpDet[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"analist[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"showrawdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"valnaok[10][10][256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rawdt[10][10][256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"V1190refval=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ExpNumDets=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtSortProccLcLmapping),-1,-1,4,"ExpDetRaw[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtSortProccLcLhst1),-1,-1,4,"hist1[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtSortProccLcLhst2),-1,-1,4,"hist2[1000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtSortProccLcLhst1),-1,-1,4,"gate1[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ArtLN_TArtSortProccLcLhst2),-1,-1,4,"gate2[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nhst1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nhst2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ngate1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ngate2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__ArtLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fi=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"mapfile[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"hstfile[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fiberprmfile[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"ppacprmfile[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__ArtLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__Art() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTArtAnalysis(void) {
   /* TArtAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis));
   G__memfunc_setup("TArtAnalysis",1215,G__G__Art_707_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtAnalysis",1215,G__G__Art_707_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis), -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UserPreLoop",1120,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UserEventFunc",1325,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UserPostLoop",1247,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_707_0_6, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_707_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_707_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_707_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_707_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_707_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_707_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_707_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_707_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtAnalysis", 1215, G__G__Art_707_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis), -1, 0, 1, 1, 1, 0, "u 'TArtAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtAnalysis", 1341, G__G__Art_707_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_707_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtAnalysis), -1, 1, 1, 1, 1, 0, "u 'TArtAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtUnpackEvent(void) {
   /* TArtUnpackEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent));
   G__memfunc_setup("TArtUnpackEvent",1503,G__G__Art_708_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtUnpackEvent",1503,G__G__Art_708_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_708_0_4, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtUnpackEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_708_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtUnpackEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_708_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtUnpackEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_708_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtUnpackEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_708_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_708_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtUnpackEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_708_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtUnpackEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_708_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtUnpackEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_708_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtUnpackEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtUnpackEvent", 1503, G__G__Art_708_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent), -1, 0, 1, 1, 1, 0, "u 'TArtUnpackEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtUnpackEvent", 1629, G__G__Art_708_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_708_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtUnpackEvent), -1, 1, 1, 1, 1, 0, "u 'TArtUnpackEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSortEvent(void) {
   /* TArtSortEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent));
   G__memfunc_setup("TArtSortEvent",1317,G__G__Art_709_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtSortEvent",1317,G__G__Art_709_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_709_0_4, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtSortEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_709_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSortEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_709_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtSortEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_709_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSortEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_709_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_709_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSortEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_709_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSortEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_709_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSortEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_709_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSortEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtSortEvent", 1317, G__G__Art_709_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent), -1, 0, 1, 1, 1, 0, "u 'TArtSortEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSortEvent", 1443, G__G__Art_709_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_709_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtSortEvent), -1, 1, 1, 1, 1, 0, "u 'TArtSortEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtAnlEvent(void) {
   /* TArtAnlEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent));
   G__memfunc_setup("TArtAnlEvent",1176,G__G__Art_710_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtAnlEvent",1176,G__G__Art_710_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_710_0_4, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtAnlEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_710_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnlEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_710_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtAnlEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_710_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnlEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_710_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_710_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnlEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_710_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnlEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_710_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnlEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_710_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnlEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtAnlEvent", 1176, G__G__Art_710_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent), -1, 0, 1, 1, 1, 0, "u 'TArtAnlEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtAnlEvent", 1302, G__G__Art_710_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_710_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtAnlEvent), -1, 1, 1, 1, 1, 0, "u 'TArtAnlEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtF2Param(void) {
   /* TArtF2Param */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param));
   G__memfunc_setup("TArtF2Param",996,G__G__Art_714_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtF2Param",996,G__G__Art_714_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameter",1454,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 0 - n i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintParameter",1454,G__G__Art_714_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_714_0_6, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtF2Param::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_714_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtF2Param::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_714_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtF2Param::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_714_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtF2Param::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_714_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_714_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtF2Param::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_714_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtF2Param::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_714_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtF2Param::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_714_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtF2Param::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtF2Param", 996, G__G__Art_714_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param), -1, 0, 1, 1, 1, 0, "u 'TArtF2Param' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtF2Param", 1122, G__G__Art_714_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_714_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtF2Param), -1, 1, 1, 1, 1, 0, "u 'TArtF2Param' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtF3Param(void) {
   /* TArtF3Param */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param));
   G__memfunc_setup("TArtF3Param",997,G__G__Art_715_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtF3Param",997,G__G__Art_715_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameter",1454,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 0 - n i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintParameter",1454,G__G__Art_715_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_715_0_6, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtF3Param::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_715_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtF3Param::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_715_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtF3Param::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_715_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtF3Param::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_715_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_715_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtF3Param::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_715_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtF3Param::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_715_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtF3Param::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_715_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtF3Param::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtF3Param", 997, G__G__Art_715_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param), -1, 0, 1, 1, 1, 0, "u 'TArtF3Param' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtF3Param", 1123, G__G__Art_715_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_715_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtF3Param), -1, 1, 1, 1, 1, 0, "u 'TArtF3Param' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtAnlProc(void) {
   /* TArtAnlProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc));
   G__memfunc_setup("TArtAnlProc",1066,G__G__Art_716_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtAnlProc",1066,G__G__Art_716_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeH2I_Profile",1393,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ArtLN_TH2), -1, 0, 2, 1, 4, 0, 
"C - - 10 - foldername i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeH2I_Profile_cond",1908,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ArtLN_TH2), -1, 0, 3, 1, 4, 0, 
"C - - 10 - foldername i - - 0 - index "
"i - - 0 - cond", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeH2I_TPC_ID",1139,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__ArtLN_TH2), -1, 0, 2, 1, 4, 0, 
"C - - 10 - foldername i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Art_716_0_7, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtAnlProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_716_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnlProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_716_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtAnlProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_716_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnlProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_716_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_716_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnlProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_716_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnlProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_716_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnlProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_716_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnlProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtAnlProc", 1066, G__G__Art_716_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc), -1, 0, 1, 1, 1, 0, "u 'TArtAnlProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtAnlProc", 1192, G__G__Art_716_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_716_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtAnlProc), -1, 1, 1, 1, 1, 0, "u 'TArtAnlProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRawEvent(void) {
   /* TArtRawEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent));
   G__memfunc_setup("TArtRawEvent",1191,G__G__Art_717_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRawEvent",1191,G__G__Art_717_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintEvent",1039,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_717_0_5, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRawEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_717_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_717_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRawEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_717_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRawEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_717_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_717_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_717_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_717_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_717_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRawEvent", 1191, G__G__Art_717_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent), -1, 0, 1, 1, 1, 0, "u 'TArtRawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRawEvent", 1317, G__G__Art_717_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_717_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtRawEvent), -1, 1, 1, 1, 1, 0, "u 'TArtRawEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtEventSource(void) {
   /* TArtEventSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource));
   G__memfunc_setup("TArtEventSource",1518,G__G__Art_719_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtEventSource",1518,G__G__Art_719_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - args "
"i - 'Int_t' 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtEventSource",1518,G__G__Art_719_0_3, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource), -1, 0, 1, 1, 1, 0, "U 'TGo4UserSourceParameter' - 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__G__Art_719_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,G__G__Art_719_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckEventClass",1494,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetArgs",685,G__G__Art_719_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArgs",697,G__G__Art_719_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - arg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPort",709,G__G__Art_719_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPort",721,G__G__Art_719_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Art_719_0_12, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtEventSource::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_719_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventSource::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_719_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtEventSource::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_719_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtEventSource::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_719_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_719_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventSource::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_719_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtEventSource::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_719_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventSource::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_719_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtEventSource::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtEventSource", 1518, G__G__Art_719_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource), -1, 0, 1, 1, 1, 0, "u 'TArtEventSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtEventSource", 1644, G__G__Art_719_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_719_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtEventSource), -1, 1, 1, 1, 1, 0, "u 'TArtEventSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtProc(void) {
   /* TArtProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtProc));
   G__memfunc_setup("TArtProc",783,G__G__Art_722_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtProc",783,G__G__Art_722_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - target", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__Art_722_0_4, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_722_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_722_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_722_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_722_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_722_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_722_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_722_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_722_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtProc", 783, G__G__Art_722_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__ArtLN_TArtProc), -1, 0, 1, 1, 1, 0, "u 'TArtProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtProc", 909, G__G__Art_722_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__Art_722_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__ArtLN_TArtProc), -1, 1, 1, 1, 1, 0, "u 'TArtProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSortProc(void) {
   /* TArtSortProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc));
   G__memfunc_setup("TArtSortProc",1207,G__G__Art_753_0_1, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtSortProc",1207,G__G__Art_753_0_2, 105, G__get_linked_tagnum(&G__G__ArtLN_TArtSortProc), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("F1_Fiber_MakeHist",1587,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("F1_Fiber_CalibMakeHist",2062,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("F1_Fiber_FillHist",1596,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TArtUnpackEvent' - 0 - - U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("F1_Fiber_Assign",1410,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TArtUnpackEvent' - 0 - - U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamLineMakeHist",1555,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamLineFillHist",1564,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeamLineAssign",1378,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TArtUnpackEvent' - 0 - - U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PPACMakeHist",1082,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PPACFillHist",1091,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PPACCalibration",1420,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RawDataMakeHist",1466,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RawDataFillHist",1475,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RawDataAssign",1289,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "U 'TArtUnpackEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MWDC_cal",698,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TArtUnpackEvent' - 0 - - U 'TArtSortEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readParameters",1456,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "C - 'Char_t' 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readmapfile",1146,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - 'Char_t' 0 - filename U 'TArtSortProc::mapping' - 0 - map "
"i - 'Int_t' 1 - numch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readHist1",869,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 9, 1, 4, 0, 
"C - 'Char_t' 0 - filename U 'TArtSortProc::hst1' - 0 - map1 "
"i - 'Int_t' 1 - numch1 U 'TArtSortProc::hst2' - 0 - map2 "
"i - 'Int_t' 1 - numch2 U 'TArtSortProc::hst1' - 0 - map3 "
"i - 'Int_t' 1 - numch3 U 'TArtSortProc::hst2' - 0 - map4 "
"i - 'Int_t' 1 - numch4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeGate",767,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"U 'TArtSortProc::hst1' - 0 - gate1 i - 'Int_t' 0 - ng1 "
"U 'TArtSortProc::hst2' - 0 - gate2 i - 'Int_t' 0 - ng2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHist1",880,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 4, 0, 
"U 'TArtSortProc::hst1' - 0 - histo i - 'Int_t' 0 - numch "
"U 'TArtSortProc::hst2' - 0 - histo2 i - 'Int_t' 0 - numch2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextLine",1095,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 4, 0, "c - 'Char_t' 0 ''#'' s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Put2Array",874,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - 'Char_t' 0 - - I - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Put2Array",874,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - 'Char_t' 0 - - D - 'Double_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ltrim",552,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 4, 0, "C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rtrim",558,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 4, 0, "C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trim",444,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 4, 0, "C - 'Char_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__Art_753_0_29, 85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtSortProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__Art_753_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSortProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__Art_753_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtSortProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__Art_753_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSortProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__ArtLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__Art_753_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__Art_753_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSortProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__Art_753_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSortProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__Art_753_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSortProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__Art_753_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSortProc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TArtSortProc", 1333, G__G__Art_753_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__Art() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__Art() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__Art() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__ArtLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__ArtLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_EN_CsI = { "EN_CsI" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_ENFiberCal = { "ENFiberCal" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_EN_Neutron = { "EN_Neutron" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_ENPlastic = { "ENPlastic" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_EN_PPAC_Cal = { "EN_PPAC_Cal" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4CommandReceiver = { "TGo4CommandReceiver" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4WinCond = { "TGo4WinCond" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4PolyCond = { "TGo4PolyCond" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4Parameter = { "TGo4Parameter" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4EventElement = { "TGo4EventElement" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4EventSource = { "TGo4EventSource" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4EventProcessor = { "TGo4EventProcessor" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4Analysis = { "TGo4Analysis" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TGo4UserSourceParameter = { "TGo4UserSourceParameter" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtAnalysis = { "TArtAnalysis" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtUnpackEvent = { "TArtUnpackEvent" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtSortEvent = { "TArtSortEvent" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtAnlEvent = { "TArtAnlEvent" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtF2Param = { "TArtF2Param" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtF3Param = { "TArtF3Param" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtAnlProc = { "TArtAnlProc" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtRawEvent = { "TArtRawEvent" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtEventStore = { "TArtEventStore" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtEventSource = { "TArtEventSource" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtRawEventObject = { "TArtRawEventObject" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtProc = { "TArtProc" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR = { "vector<TArtRawDataObject*,allocator<TArtRawDataObject*> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawDataObject*,allocator<TArtRawDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR = { "vector<TArtRawFADCDataObject*,allocator<TArtRawFADCDataObject*> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawFADCDataObject*,allocator<TArtRawFADCDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgR = { "vector<TArtRawATDataObject*,allocator<TArtRawATDataObject*> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawATDataObject*,allocator<TArtRawATDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR = { "vector<TArtRawSegmentObject*,allocator<TArtRawSegmentObject*> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawSegmentObject*,allocator<TArtRawSegmentObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR = { "vector<TArtRawScalerObject*,allocator<TArtRawScalerObject*> >" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawScalerObject*,allocator<TArtRawScalerObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtSortProc = { "TArtSortProc" , 99 , -1 };
G__linked_taginfo G__G__ArtLN_TArtSortProccLcLmapping = { "TArtSortProc::mapping" , 115 , -1 };
G__linked_taginfo G__G__ArtLN_TArtSortProccLcLhst1 = { "TArtSortProc::hst1" , 115 , -1 };
G__linked_taginfo G__G__ArtLN_TArtSortProccLcLhst2 = { "TArtSortProc::hst2" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__Art() {
  G__G__ArtLN_TClass.tagnum = -1 ;
  G__G__ArtLN_TBuffer.tagnum = -1 ;
  G__G__ArtLN_TMemberInspector.tagnum = -1 ;
  G__G__ArtLN_TObject.tagnum = -1 ;
  G__G__ArtLN_TNamed.tagnum = -1 ;
  G__G__ArtLN_TString.tagnum = -1 ;
  G__G__ArtLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__ArtLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__G__ArtLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_TArrayI.tagnum = -1 ;
  G__G__ArtLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__ArtLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__ArtLN_TH1.tagnum = -1 ;
  G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__ArtLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__ArtLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_EN_CsI.tagnum = -1 ;
  G__G__ArtLN_ENFiberCal.tagnum = -1 ;
  G__G__ArtLN_EN_Neutron.tagnum = -1 ;
  G__G__ArtLN_ENPlastic.tagnum = -1 ;
  G__G__ArtLN_EN_PPAC_Cal.tagnum = -1 ;
  G__G__ArtLN_TGo4CommandReceiver.tagnum = -1 ;
  G__G__ArtLN_TH2.tagnum = -1 ;
  G__G__ArtLN_TGo4WinCond.tagnum = -1 ;
  G__G__ArtLN_TGo4PolyCond.tagnum = -1 ;
  G__G__ArtLN_TGo4Parameter.tagnum = -1 ;
  G__G__ArtLN_TGo4EventElement.tagnum = -1 ;
  G__G__ArtLN_TGo4EventSource.tagnum = -1 ;
  G__G__ArtLN_TGo4EventProcessor.tagnum = -1 ;
  G__G__ArtLN_TGo4Analysis.tagnum = -1 ;
  G__G__ArtLN_TGo4UserSourceParameter.tagnum = -1 ;
  G__G__ArtLN_TArtAnalysis.tagnum = -1 ;
  G__G__ArtLN_TArtUnpackEvent.tagnum = -1 ;
  G__G__ArtLN_TArtSortEvent.tagnum = -1 ;
  G__G__ArtLN_TArtAnlEvent.tagnum = -1 ;
  G__G__ArtLN_TRandom.tagnum = -1 ;
  G__G__ArtLN_TArtF2Param.tagnum = -1 ;
  G__G__ArtLN_TArtF3Param.tagnum = -1 ;
  G__G__ArtLN_TArtAnlProc.tagnum = -1 ;
  G__G__ArtLN_TArtRawEvent.tagnum = -1 ;
  G__G__ArtLN_TArtEventStore.tagnum = -1 ;
  G__G__ArtLN_TArtEventSource.tagnum = -1 ;
  G__G__ArtLN_TArtRawEventObject.tagnum = -1 ;
  G__G__ArtLN_TArtProc.tagnum = -1 ;
  G__G__ArtLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_vectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR.tagnum = -1 ;
  G__G__ArtLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__ArtLN_TArtSortProc.tagnum = -1 ;
  G__G__ArtLN_TArtSortProccLcLmapping.tagnum = -1 ;
  G__G__ArtLN_TArtSortProccLcLhst1.tagnum = -1 ;
  G__G__ArtLN_TArtSortProccLcLhst2.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__Art() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TString);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_EN_CsI);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_ENFiberCal);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_EN_Neutron);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_ENPlastic);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_EN_PPAC_Cal);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4CommandReceiver);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TH2);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4WinCond);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4PolyCond);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4Parameter);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4EventElement);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4EventSource);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4EventProcessor);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4Analysis);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TGo4UserSourceParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtAnalysis),sizeof(TArtAnalysis),-1,324864,(char*)NULL,G__setup_memvarTArtAnalysis,G__setup_memfuncTArtAnalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtUnpackEvent),sizeof(TArtUnpackEvent),-1,324864,(char*)NULL,G__setup_memvarTArtUnpackEvent,G__setup_memfuncTArtUnpackEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtSortEvent),sizeof(TArtSortEvent),-1,324864,(char*)NULL,G__setup_memvarTArtSortEvent,G__setup_memfuncTArtSortEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtAnlEvent),sizeof(TArtAnlEvent),-1,324864,(char*)NULL,G__setup_memvarTArtAnlEvent,G__setup_memfuncTArtAnlEvent);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TRandom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtF2Param),sizeof(TArtF2Param),-1,324864,(char*)NULL,G__setup_memvarTArtF2Param,G__setup_memfuncTArtF2Param);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtF3Param),sizeof(TArtF3Param),-1,324864,(char*)NULL,G__setup_memvarTArtF3Param,G__setup_memfuncTArtF3Param);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtAnlProc),sizeof(TArtAnlProc),-1,324864,(char*)NULL,G__setup_memvarTArtAnlProc,G__setup_memfuncTArtAnlProc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtRawEvent),sizeof(TArtRawEvent),-1,324864,(char*)NULL,G__setup_memvarTArtRawEvent,G__setup_memfuncTArtRawEvent);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtEventStore);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtEventSource),sizeof(TArtEventSource),-1,324864,(char*)NULL,G__setup_memvarTArtEventSource,G__setup_memfuncTArtEventSource);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtRawEventObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtProc),sizeof(TArtProc),-1,324864,(char*)NULL,G__setup_memvarTArtProc,G__setup_memfuncTArtProc);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawATDataObjectmUcOallocatorlETArtRawATDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtSortProc),sizeof(TArtSortProc),-1,324864,(char*)NULL,G__setup_memvarTArtSortProc,G__setup_memfuncTArtSortProc);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtSortProccLcLmapping);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtSortProccLcLhst1);
   G__get_linked_tagnum_fwd(&G__G__ArtLN_TArtSortProccLcLhst2);
}
extern "C" void G__cpp_setupG__Art(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__Art()");
  G__set_cpp_environmentG__Art();
  G__cpp_setup_tagtableG__Art();

  G__cpp_setup_inheritanceG__Art();

  G__cpp_setup_typetableG__Art();

  G__cpp_setup_memvarG__Art();

  G__cpp_setup_memfuncG__Art();
  G__cpp_setup_globalG__Art();
  G__cpp_setup_funcG__Art();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__Art();
  return;
}
class G__cpp_setup_initG__Art {
  public:
    G__cpp_setup_initG__Art() { G__add_setup_func("G__Art",(G__incsetup)(&G__cpp_setupG__Art)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__Art() { G__remove_setup_func("G__Art"); }
};
G__cpp_setup_initG__Art G__cpp_setup_initializerG__Art;

